{"pageProps":{"postData":{"frontmatter":{"title":"The Richest Man in Babylon","description":"Takes just 7 steps to become wealthy!","date":"November 29, 2021","topic":{"id":"booknotes","name":"Book Notes","image":"booknotes.jpg","description":"Reading books, and keeping notes! I seek to what the books have to tell me.","color":"bg-green-300"},"author":{"id":"chris","name":"Chris","image":"https://s.gravatar.com/avatar/db809ecfa64d56da4bd9704c8393005a?s=80","description":"Software Engineer, passionate about ..."},"img":"/static/richest-man-book.jpeg","tags":[]},"post":{"content":"\n## The 7 steps to build wealth\n\n**<u>1. Start saving.</u>**\n   \n  > Save 10% out of the earnings from your labor. To accomplish such a stream of savings, start disfavoring the gratifications of the daily life and appreciate the accomplishment of owing substantial belongings.\n\n**<u>2. Control your expenses.</u>**\n\n  > All people are burdened with more desires than they gratify. To limit that, study thoughtfully your accustomed habits of living and prioritize your expenses while at the same time respecting each coin you earn.\n\n**<u>3. Make your savings multiply.</u>**\n\n  > While accumulating savings is gratifying, locking them down brings only loss (Inflation!). Instead, find investment opportunities! This of course increases the risk, but may also increase the reward.  \n\n**<u>4. Protect your investment from loss.</u>**\n\n  > The first principle of investment is security for your principal. The penalty of risk is probable loss. Study carefully before investing. The romantic desire to make wealth rapidly is misleading.\n\n  > Each investment is considered a type of loan where you expect to get back the principal plus a profit/loss. To ensure at least the return of the principal, make sure the \"borrower\" is able to repay and has a good reputation on that (otherwise you just making him a present).  \n\n**<u>5. Own your dwelling.</u>**\n\n  > It brings gladness to the heart when one eats from their own trees and leave in their own home. It builds confidence and will to care about the land. It also boosts the efforts behind any of the endeavors. \n\n**<u>6. Ensure a future income.</u>**\n\n  > Prepare for a suitable income in the days to come, for when you grow old. Make sure you can comfort and support your family even when you are no longer with them.   \n\n**<u>7. Increase your ability to earn.</u>**\n\n  > Cultivate your own powers, study and become wiser, become more skillful. Act as to respect yourself! Your desires must be simple and definite. They defeat their own purpose should they be too many.\n\n## The Goddess of Good Luck\n\n  > To attract good luck to yourself, it is necessary to take advantage of opportunities. Those of action on these opportunities are favored by the Goddess of Good Luck.\n\n## Lending money advices\n\n  * To borrowing and lending there is more than the passing of money from the hands of one to the hands of another.\n  * If you desire to help your friend, do so in a way that will not bring your friend's burdens to yourself.\n  * Types of loan securities/pledges:\n      * based on property. The pawn can be land, jewels etc.\n      * based on human effort. Has a steady income from labor and is trustworthy.\n      * if none of the above, can friends of the borrower guarantee that is honorable?\n  * A borrower in the throes of great emotions is not a safe risk.\n  * Ask for what purpose the borrower will use the money.\n  * Ask what knowledge the borrower has for the business they are getting into.\n  * Ask for a security in case the borrower cannot repay.\n  * Always think that your well deserved savings are yours due to the sacrifices you have made. \n\n  <center><h2><u>Better a little caution than a great regret!</u><h2></center>\n","excerpt":""},"previousPost":{"slug":"generating-stock-reports-with-pyinvestingsnippets","frontmatter":{"title":"Pyinvestingsnippets","description":"A python library to aid stock and portfolio analysis and reporting.","date":"October 3, 2021","topic":{"id":"automation","name":"Automation","image":"automation.jpg","description":"Spending time to do the same thing over and over again is tedious! Thus, I like to automate as much as possible.","color":"bg-green-300"},"tags":[{"id":"python","name":"python","image":"python-header.png","description":"Python is very handy in investing","color":"bg-green-300","icon":"python.svg"}],"author":{"id":"chris","name":"Chris","image":"https://s.gravatar.com/avatar/db809ecfa64d56da4bd9704c8393005a?s=80","description":"Software Engineer, passionate about ..."},"colab":"https://colab.research.google.com/drive/1ffDTOO0xjlHWJR-XbyoRcoGiZvgN5L9-?usp=sharing","img":"/static/python-module.jpeg"},"excerpt":"","content":"\nIt's been a while since the last time! All this period, I was building a new python library :) This library extends pandas and implements most of the concepts we have discussed in earlier articles.\n\nIt is called `pyinvestingsnippets` and can be found [here](https://pyinvestingsnippets.readthedocs.io/en/latest/).\n\nIn practice, the library extends pandas series with attributes that perform stock analysis operations like:\n\n* [Returns](https://www.investingsnippets.com/post/geometric-progression-and-compounding-of-returns)\n* [Volatility](https://www.investingsnippets.com/post/measures-of-variability)\n* [WealthIndex](https://www.investingsnippets.com/post/from-portfolio-wealth-index-to-index-fund)\n* [Drawdown](https://www.investingsnippets.com/post/drawdown)\n* [SRRI](https://www.esma.europa.eu/sites/default/files/library/2015/11/10_673.pdf)\n* beta (I will write an article about that later on)\n\nBellow you can see how this library can be used to generate simple reports.\n\n<details><summary>Package Installation</summary>\n<p>\n\n```python\n%%capture\n%pip install yahoofinancials\n%pip install pyinvestingsnippets==1.0.0\n\nimport sys\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport seaborn as sns\n\nimport datetime\n\nfrom yahoofinancials import YahooFinancials\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport dateutil.parser\n\nimport pyinvestingsnippets\n```\n\n</p>\n</details>\n\n<details><summary>Helper Functions</summary>\n<p>\n\n```python\ndef retrieve_stock_data(ticker, start, end):\n    json = YahooFinancials(ticker).get_historical_price_data(start, end, \"daily\")\n    columns=[\"adjclose\"]  # [\"open\",\"close\",\"adjclose\"]\n    df = pd.DataFrame(columns=columns)\n    for row in json[ticker][\"prices\"]:\n        d = dateutil.parser.isoparse(row[\"formatted_date\"])\n        df.loc[d] = [row[\"adjclose\"]] # [row[\"open\"], row[\"close\"], row[\"adjclose\"]]\n    df.index.name = \"date\"\n    df.columns = [ticker]\n    return df\n```\n\n</p>\n</details>\n\n```python\n# Let's first pick two assets to compare\nASSET_1 = 'AAPL'\nASSET_2 = 'SPY'\n\n# We will work with the last 5 years of historical data\nend_date = datetime.datetime.now()\nstart_date = end_date - datetime.timedelta(days=5 * 365)\nend_date_frmt = end_date.strftime(\"%Y-%m-%d\")\nstart_date_frmt = start_date.strftime(\"%Y-%m-%d\")\n\n# We fetch the historical prices from yahoofinance\nasset1_prices = retrieve_stock_data(ASSET_1, start_date_frmt, end_date_frmt)\nasset2_prices = retrieve_stock_data(ASSET_2, start_date_frmt, end_date_frmt)\n\n# From the prices series we can now get the returns by using an extension\nasset1_rets = asset1_prices[ASSET_1].prices.returns\nasset2_rets = asset2_prices[ASSET_2].prices.returns\n\n# We can get the wealth index from the returns\nasset1_wi = asset1_rets.wealth_index\nasset2_wi = asset2_rets.wealth_index\n\n# and the drawdown from the wealth index\nasset1_dd = asset1_wi.drawdown\nasset1_dd_dur = asset1_dd.durations\nasset2_dd = asset2_wi.drawdown\nasset2_dd_dur = asset2_dd.durations\n\nrolling_rets = pyinvestingsnippets.RollingReturns(asset1_rets.data, rolling_window=252)\n\n# 3 month rolling annualized vol\nrolling_vol = pyinvestingsnippets.RollingVolatility(asset1_rets.data, rolling_window=90, window=252)\n\n# 30 days rolling beta\nrolling_beta = pyinvestingsnippets.RollingBetaCovariance(asset2_rets.data, asset1_rets.data, 30)\n\n# total beta\nbeta = pyinvestingsnippets.BetaCovariance(asset2_wi.monthly_returns.data, asset1_wi.monthly_returns.data)\n\n# the downside risk as an ExponantiallyWeightedDownsideRisk\ndownside_risk = pyinvestingsnippets.ExponantiallyWeightedDownsideRisk(asset1_rets.data)\n\n# the risk classes and the risk values for SRRI\nasset1_srri_rc = asset1_prices[ASSET_1].prices.monthly_returns.srri.risk_class\nasset1_srri_rv = asset1_prices[ASSET_1].prices.monthly_returns.srri.value\nasset2_srri_rc = asset2_prices[ASSET_2].prices.monthly_returns.srri.risk_class\nasset2_srri_rv = asset2_prices[ASSET_2].prices.monthly_returns.srri.value\n```\n\nThe outcome as a plot looks like:\n\n<details><summary>Generate a report with matplotlib</summary>\n<p>\n\n```python\nfig = plt.figure(figsize=(14, 16), constrained_layout=True)\nfig.suptitle(\"Report\", weight='bold')\ngs = gridspec.GridSpec(5, 6, figure=fig)\n\nax_equity = plt.subplot(gs[0, :])\nax_drawdown = plt.subplot(gs[1, :])\nax_monthly_returns = plt.subplot(gs[2, :3])\nax_yearly_returns = plt.subplot(gs[2, 3:])\nax_rolling_returns = plt.subplot(gs[3, :2])\nax_rolling_vol = plt.subplot(gs[3, 2:4])\nax_downside_risk = plt.subplot(gs[3, 4:])\nax_stats = plt.subplot(gs[4, :3])\nax_beta = plt.subplot(gs[4, 3:])\n\nasset1_wi.plot(ax=ax_equity, color='blue', label=ASSET_1)\nasset2_wi.plot(ax=ax_equity, color='grey', label=ASSET_2)\n\nasset1_dd.plot(ax=ax_drawdown, color='blue')\nasset2_dd.plot(ax=ax_drawdown, color='grey')\n\nasset1_wi.monthly_returns.plot(ax=ax_monthly_returns, color='blue')\nasset1_wi.annual_returns.plot(ax=ax_yearly_returns, color='blue')\nrolling_beta.plot(ax=ax_beta, color='blue', label='cov')\n\nrolling_rets.plot(ax=ax_rolling_returns, color='blue')\nrolling_vol.plot(ax=ax_rolling_vol, color='blue')\n\ndownside_risk.plot(ax=ax_downside_risk, color='blue')\n\ndef _plot_stats(ax=None, **kwargs):\n    if ax is None:\n        ax = plt.gca()\n\n    data = [\n        ['Total Return', '{:.0%}'.format(asset1_wi.total_return), '{:.0%}'.format(asset2_wi.total_return)],\n        ['CAGR', '{:.2%}'.format(asset1_wi.cagr), '{:.2%}'.format(asset2_wi.cagr)],\n        ['Max Drawdown', '{:.2%}'.format(asset1_dd.max_drawdown), '{:.2%}'.format(asset2_dd.max_drawdown)],\n        ['Avg Drawdown Duration', asset1_dd_dur.mean(), asset2_dd_dur.mean()],\n        ['Max Drawdown Duration', asset1_dd_dur.max(), asset2_dd_dur.max()],\n        ['SRRI', '{}/7 ({:.2%})'.format(asset1_srri_rc, asset1_srri_rv),\n                 '{}/7 ({:.2%})'.format(asset2_srri_rc, asset2_srri_rv)],\n        ['Beta', '{:.2}'.format(beta.beta), '1']\n    ]\n    column_labels=[\"Metric\", f\"{ASSET_1}\", f\"{ASSET_2}\"]\n    ax.axis('tight')\n    ax.axis('off')\n    table = ax.table(cellText=data, colLabels=column_labels, loc=\"center\", edges='open')\n    table.set_fontsize(10)\n    table.scale(1.5, 1.5)\n\n    ax.grid(False)\n    ax.get_yaxis().set_visible(False)\n    ax.get_xaxis().set_visible(False)\n    ax.set_ylabel(\"Stats\")\n    ax.set_xlabel('')\n\n    ax.axis([0, 10, 0, 10])\n\n    return ax\n\n_plot_stats(ax=ax_stats)\n\nplt.show()\n```\n\n</p>\n</details>\n    \n![png](generating-stock-reports-with-pyinvestingsnippets/generating-stock-reports-with-pyinvestingsnippets_5_0.png)\n\nAs a next step, I will extend this module to support even more metrics and portfolio functions.\n\nAs always, stay tuned!\n"},"nextPost":{"slug":"reports-with-pyinvestingsnippets-and-plotly","frontmatter":{"title":"pyinvestingsnippets + plotly = AWESOME","description":"An amazing Dash + Plotly + Pyinvestingsnippets stock/portfolio benchmarking tool.","date":"February 12, 2022","topic":{"id":"automation","name":"Automation","image":"automation.jpg","description":"Spending time to do the same thing over and over again is tedious! Thus, I like to automate as much as possible.","color":"bg-green-300"},"tags":[{"id":"python","name":"python","image":"python-header.png","description":"Python is very handy in investing","color":"bg-green-300","icon":"python.svg"}],"author":{"id":"chris","name":"Chris","image":"https://s.gravatar.com/avatar/db809ecfa64d56da4bd9704c8393005a?s=80","description":"Software Engineer, passionate about ..."},"img":"/static/magic-lamp.png"},"excerpt":"","content":"\nThe last several months I have been extending [pyinvestingsnippets](https://pyinvestingsnippets.readthedocs.io/en/latest/). Some of the changes include:\n\n* Renamed extensions to fit common financial jargon\n* Added support for dataframes\n* Added support for plotly\n* Included fantastic matplotlib and plotly [examples](https://github.com/investingsnippets/pyinvestingsnippets/tree/master/examples)\n\n<!-- [![pyinvestingsnippets + plotly = AWESOME](https://img.youtube.com/vi/IDzR-N9nfDg/0.jpg)](https://youtu.be/IDzR-N9nfDg \"pyinvestingsnippets + plotly = AWESOME\") -->\n\n<p align=\"center\"><iframe width=\"420\" height=\"315\" \nsrc=\"https://www.youtube.com/embed/IDzR-N9nfDg\">\n</iframe></p>\n\n## Run the examples\n\nTo run the examples, clone [`v3.0.0`](https://github.com/investingsnippets/pyinvestingsnippets/tree/v3.0.0) and follow the `README.md` guidelines.\n\nCurrently the examples generate asset prices based on the random walk hypothesis (Brownian Motion)! This is great for a \"look and feel\" of the tool. If you want to try the examples with your own symbols then change the [ASSET_TICKERS & BENCHMARK_TICKERS](https://github.com/investingsnippets/pyinvestingsnippets/blob/v3.0.0/examples/plotly_report_dataframe.py#L25) and replace the [random price generator](https://github.com/investingsnippets/pyinvestingsnippets/blob/v3.0.0/examples/plotly_report_dataframe.py#L87) with the `yahoo` finance price [DataReader](https://github.com/investingsnippets/pyinvestingsnippets/blob/v3.0.0/examples/plotly_report_dataframe.py#L86).  \n\n## Future Plans\n\nThe journey doesn't stop here! I'm planning to extend [pyinvestingsnippets](https://pyinvestingsnippets.readthedocs.io/en/latest/) even more by introducing:\n\n* more portfolio benchmarking metrics\n* support of inflation & risk free rates\n* etc. \n\nWhat would you like so see more? Send me your thoughts...\n"}},"tags":[{"id":"python","name":"python","image":"python-header.png","description":"Python is very handy in investing","color":"bg-green-300","icon":"python.svg","slug":"python","count":15},{"id":"statistics","name":"statistics","image":"statistics.jpg","description":"Statistics is the discipline that concerns the collection, organization, analysis, interpretation and presentation of data. - Wikipedia","color":"bg-green-300","icon":"statistics.svg","slug":"statistics","count":4},{"id":"cryptos","name":"cryptos","image":"bitcoin.png","description":"The amazing world of Blockchain opens one more chapter in the Investing.","color":"bg-green-300","icon":"bitcoin.svg","slug":"cryptos","count":1}],"sortedTopics":[{"id":"investing","name":"Investing","image":"investing.png","description":"The piggy bank digests a good amount of the savings! There is only one way to get away ... Investing. BUT, there is a hidden enemy, Speculation!","color":"bg-green-300","slug":"investing","count":10},{"id":"automation","name":"Automation","image":"automation.jpg","description":"Spending time to do the same thing over and over again is tedious! Thus, I like to automate as much as possible.","color":"bg-green-300","slug":"automation","count":5},{"id":"mathematics","name":"Mathematics","image":"mathematics.png","description":"Investing, as part of the Science of Finance, is subject to the lows of Mathematics!","color":"bg-green-300","slug":"mathematics","count":4},{"id":"booknotes","name":"Book Notes","image":"booknotes.jpg","description":"Reading books, and keeping notes! I seek to what the books have to tell me.","color":"bg-green-300","slug":"booknotes","count":1}],"allTopics":[{"id":"investing","name":"Investing","image":"investing.png","description":"The piggy bank digests a good amount of the savings! There is only one way to get away ... Investing. BUT, there is a hidden enemy, Speculation!","color":"bg-green-300"},{"id":"mathematics","name":"Mathematics","image":"mathematics.png","description":"Investing, as part of the Science of Finance, is subject to the lows of Mathematics!","color":"bg-green-300"},{"id":"automation","name":"Automation","image":"automation.jpg","description":"Spending time to do the same thing over and over again is tedious! Thus, I like to automate as much as possible.","color":"bg-green-300"},{"id":"booknotes","name":"Book Notes","image":"booknotes.jpg","description":"Reading books, and keeping notes! I seek to what the books have to tell me.","color":"bg-green-300"}],"slug":"the-richest-man-in-babylon"},"__N_SSG":true}